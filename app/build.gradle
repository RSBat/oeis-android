import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask

plugins {
    id "com.diffplug.spotless" version "6.12.0"
    id "io.gitlab.arturbosch.detekt" version "1.22.0"
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

android {
    namespace 'kozelko.me.oeisandroid'
    compileSdkVersion 33
    defaultConfig {
        applicationId "kozelko.me.oeisandroid"
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    def moshiVersion = "1.14.0"
    def pagingVersion = "3.1.1"
    def appcompat = "1.5.1"
    def lifecycle = "2.5.1"
    def fragment_version = "1.5.5"
    def retrofit_version = "2.9.0"
    def material_version = "1.7.0"
    def constraint_version = "2.1.4"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
    implementation 'androidx.transition:transition:1.0.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
}

spotless {
    ratchetFrom 'origin/master'

    kotlin {
        target 'src/*/java/**/*.kt'
        ktlint("0.45.2")
                .setUseExperimental(true)
                .userData(["android": "true"])
    }
}

detekt {
    buildUponDefaultConfig = true
    baseline = file("${rootProject.projectDir}/detekt/baseline.xml")
}

tasks.named("detekt").configure {
    reports {
        html.required.set(true) // observe findings in your browser with structure and code snippets
        xml.required.set(true) // checkstyle like format mainly for integrations like Jenkins
        txt.required.set(true) // similar to the console output, contains issue signature to manually edit baseline files
        sarif.required.set(true) // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning
    }
}

tasks.withType(Detekt).configureEach {
    jvmTarget = "1.8"
}
tasks.withType(DetektCreateBaselineTask).configureEach {
    jvmTarget = "1.8"
}
